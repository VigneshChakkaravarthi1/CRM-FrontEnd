{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cvignesh\\\\Desktop\\\\my-app\\\\src\\\\pages\\\\components\\\\PasswordReset\\\\PasswordReset.comp.js\";\nimport React from 'react';\nimport { Row, Col, Form, Container, Button } from 'react-bootstrap';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordReset = _ref => {\n  let {\n    handleOnChange,\n    handleOnSubmit,\n    formSwitcher,\n    email\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-info text-center\",\n            children: \"Password Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            autoComplete: \"off\",\n            onSubmit: handleOnResetSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                value: email,\n                name: \"email\",\n                placeholder: \"Enter Email\",\n                required: true,\n                onChange: handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Reset Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => {\n              formSwitcher('login');\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = PasswordReset;\nPasswordReset.propTypes = {\n  handleOnChange: propTypes.func.isRequired,\n  handleOnSubmit: propTypes.func.isRequired,\n  email: propTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","Row","Col","Form","Container","Button","propTypes","PasswordReset","handleOnChange","handleOnSubmit","formSwitcher","email","handleOnResetSubmit","func","isRequired","string"],"sources":["C:/Users/cvignesh/Desktop/my-app/src/pages/components/PasswordReset/PasswordReset.comp.js"],"sourcesContent":["import React from 'react'\r\nimport {Row,Col,Form, Container, Button} from 'react-bootstrap'\r\nimport propTypes from 'prop-types';\r\nexport const PasswordReset = ({handleOnChange,handleOnSubmit,formSwitcher,email}) => {\r\n  return (\r\n    <div >\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                <h1 className='text-info text-center'>Password Reset</h1>\r\n                <hr></hr>\r\n                <Form autoComplete='off' onSubmit={handleOnResetSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type=\"email\" value={email} name=\"email\" placeholder='Enter Email' required onChange={handleOnChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\">Reset Password</Button>\r\n                    </Form.Group>\r\n                    \r\n                    \r\n                    \r\n                </Form>\r\n                <hr></hr>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                <a href=\"#\" onClick={()=>{formSwitcher('login')}}>Login</a>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    </div>\r\n  )\r\n}\r\nPasswordReset.propTypes={\r\n    handleOnChange:propTypes.func.isRequired,\r\n    handleOnSubmit:propTypes.func.isRequired,\r\n    email :propTypes.string.isRequired,\r\n \r\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA8C,iBAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,OAAO,MAAMC,aAAa,GAAG,QAAwD;EAAA,IAAvD;IAACC,cAAD;IAAgBC,cAAhB;IAA+BC,YAA/B;IAA4CC;EAA5C,CAAuD;EACnF,oBACE;IAAA,uBACI,QAAC,SAAD;MAAA,wBACI,QAAC,GAAD;QAAA,uBACI,QAAC,GAAD;UAAA,wBACA;YAAI,SAAS,EAAC,uBAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADA,eAEA;YAAA;YAAA;YAAA;UAAA,QAFA,eAGA,QAAC,IAAD;YAAM,YAAY,EAAC,KAAnB;YAAyB,QAAQ,EAAEC,mBAAnC;YAAA,wBACI,QAAC,IAAD,CAAM,KAAN;cAAA,wBACI,QAAC,IAAD,CAAM,KAAN;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;gBAAc,IAAI,EAAC,OAAnB;gBAA2B,KAAK,EAAED,KAAlC;gBAAyC,IAAI,EAAC,OAA9C;gBAAsD,WAAW,EAAC,aAAlE;gBAAgF,QAAQ,MAAxF;gBAAyF,QAAQ,EAAEH;cAAnG;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAKI,QAAC,IAAD,CAAM,KAAN;cAAA,uBACI,QAAC,MAAD;gBAAQ,IAAI,EAAC,QAAb;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QALJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAHA,eAeA;YAAA;YAAA;YAAA;UAAA,QAfA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAoBI,QAAC,GAAD;QAAA,uBACI,QAAC,GAAD;UAAA,uBACA;YAAG,IAAI,EAAC,GAAR;YAAY,OAAO,EAAE,MAAI;cAACE,YAAY,CAAC,OAAD,CAAZ;YAAsB,CAAhD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QApBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAhCM;KAAMH,a;AAiCbA,aAAa,CAACD,SAAd,GAAwB;EACpBE,cAAc,EAACF,SAAS,CAACO,IAAV,CAAeC,UADV;EAEpBL,cAAc,EAACH,SAAS,CAACO,IAAV,CAAeC,UAFV;EAGpBH,KAAK,EAAEL,SAAS,CAACS,MAAV,CAAiBD;AAHJ,CAAxB"},"metadata":{},"sourceType":"module"}